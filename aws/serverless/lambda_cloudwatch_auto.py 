import boto3

def alarm_exists(cloudwatch_client, alarm_name):
    # Check if an alarm with the given name already exists
    existing_alarms = cloudwatch_client.describe_alarms(AlarmNames=[alarm_name])
    return len(existing_alarms['MetricAlarms']) > 0

def create_cloudwatch_alarm(region, function_name, sns_topic_arn):
    cloudwatch_client = boto3.client('cloudwatch', region_name=region)
    alarm_name = f"lambda-{function_name}-error-alert"

    if alarm_exists(cloudwatch_client, alarm_name):
        print(f"Alarm already exists for {function_name}, skipping...")
        return

    cloudwatch_client.put_metric_alarm(
        # [Alarm creation details as previously provided...]
    )
    print(f"CloudWatch alarm created for function {function_name} in region {region}.")

def main():
    region = input("Enter the AWS region: ")
    lambda_client = boto3.client('lambda', region_name=region)
    sns_client = boto3.client('sns', region_name=region)

    # [SNS topic ARN fetching logic...]

    # List all Lambda functions in the specified region
    functions = lambda_client.list_functions()['Functions']
    for function in functions:
        function_name = function['FunctionName']
        create_cloudwatch_alarm(region, function_name, sns_topic_arn)

if __name__ == "__main__":
    main()
